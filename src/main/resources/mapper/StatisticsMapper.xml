<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ygo.server.api.service.dao.StatisticsDAO">

    <select id="selectStatisticsGroupByNation" resultType="customStatistics">
        SELECT
            code_desc AS name,
            SUM(win) AS win,
            SUM(lose) AS lose,
            SUM(win) / (SUM(win) + SUM(lose)) AS rate
        FROM statistics s, deck d, common_code c
        WHERE s.deck_seq = d.seq
          AND d.nation = c.code
        GROUP BY nation
        ORDER BY rate DESC, win DESC
    </select>

    <select id="selectStatisticsGroupByDeck" resultType="customStatistics">
        SELECT
            d.name AS name,
            SUM(win) AS win,
            SUM(lose) AS lose,
            SUM(win) / (SUM(win) + SUM(lose)) AS rate
        FROM statistics s, deck d
        WHERE s.deck_seq = d.seq
        GROUP BY s.deck_seq
        ORDER BY rate DESC, win DESC
        LIMIT 10
    </select>

    <select id="selectStatisticsListOnDeckPaging" parameterType="map" resultType="customStatistics">
        SELECT
            s.reg_date AS date,
            (SELECT nickname FROM deck WHERE seq = s.deck_seq) AS name,
            SUM(win) AS win,
            SUM(lose) AS lose
        FROM statistics s
        WHERE reg_date between #{startDate} and #{endDate}
        <if test="deckSeq != null and deckSeq != '-1'">
            AND deck_seq = #{deckSeq}
        </if>
        GROUP BY s.reg_date, s.deck_seq
        ORDER BY s.reg_date
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="selectStatisticsListOnDeckPagingCount" parameterType="map" resultType="int">
        SELECT
        COUNT(*)
        FROM (
            SELECT
                reg_date,
                deck_seq
            FROM statistics s
            WHERE reg_date between #{startDate} and #{endDate}
            <if test="deckSeq != null and deckSeq != '-1'">
                AND deck_seq = #{deckSeq}
            </if>
            GROUP BY s.reg_date, s.deck_seq
        ) a
    </select>

    <select id="selectStatisticsListOnFighterPaging" parameterType="map" resultType="customStatistics">
        SELECT
            s.reg_date AS date,
            (SELECT name FROM fighter WHERE seq = s.fighter_seq) AS name,
            SUM(win) AS win,
            SUM(lose) AS lose
        FROM statistics s
        WHERE reg_date between #{startDate} and #{endDate}
        <if test="fighterSeq != null and fighterSeq != '-1'">
            AND fighter_seq = #{fighterSeq}
        </if>
        GROUP BY s.reg_date, s.fighter_seq
        ORDER BY s.reg_date
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="selectStatisticsListOnFighterPagingCount" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM (
            SELECT
                reg_date,
                fighter_seq
            FROM statistics s
            WHERE reg_date between #{startDate} and #{endDate}
            <if test="fighterSeq != null and fighterSeq != '-1'">
                AND fighter_seq = #{fighterSeq}
            </if>
            GROUP BY s.reg_date, s.fighter_seq
        ) a
    </select>

    <insert id="insertStatisticsList" parameterType="map">
        INSERT INTO statistics
        (reg_date, fighter_seq, deck_seq, win, lose)
        VALUES
        <foreach item="item" collection="statisticsList" separator=",">
            ( #{item.regDate}, #{item.fighterSeq}, #{item.deckSeq}, #{item.win}, #{item.lose} )
        </foreach>
    </insert>

</mapper>
